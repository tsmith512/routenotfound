# See https://codex.wordpress.org/Giving_WordPress_Its_Own_Directory
# this allows WordPress to be installed at /wp/ and be outside of this repo.
# When Composer installs/updates a package, it deletes the project root to do
# a clean install, but that'd wipe out everything in /wp-content/ if we don't
# silo WordPress into its own directory.

# Personal notes for php-fpm and ProxyPassMatch (which is just a relic of the
# old DrupalVM I use as a build box at the moment), need to redeclare
# ProxyPassMatch in the vhost config:

# ADD LINE (so that /wp/wp doesn't get repeated when FPM and Rewrite clash)
# ProxyPassMatch ^/wp/(.*\.php(/.*)?)$ "fcgi://127.0.0.1:9000/var/www/drupalvm/drupal"
# EDIT LINE (add "/wp" on proxy path so that paths without /wp/ get executed within the correct root for when Rewrite doesn't pick it up)
# ProxyPassMatch ^/(.*\.php(/.*)?)$ "fcgi://127.0.0.1:9000/var/www/drupalvm/drupal/wp"

<IfModule mod_rewrite.c>
RewriteEngine on
RewriteBase /

<IfModule mod_ssl.c>
  RewriteCond %{HTTPS} off
  RewriteCond %{HTTP_HOST} (www\.|staging\.)?routenotfound.com
  RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
</IfModule>

RewriteCond %{HTTP_HOST} staging.routenotfound.com
RewriteCond %{REQUEST_URI} ^/wp-content/uploads
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond /var/www/rnf-prod%{REQUEST_URI} -f
RewriteRule ^(.*)$ https://www.routenotfound.com/$1 [R=302,L]

# Append a slash if it is omitted and would map to a directory,
# Helps deal with incorrect redirect_to values on wp-login
RewriteCond %{REQUEST_URI} !^/wp/
RewriteCond %{REQUEST_URI} !/$
RewriteCond %{DOCUMENT_ROOT}/wp/$1 -d
RewriteRule (.*) /$1/ [R=302,L]

# If the requested file or directory exists in /wp/, use that. This catches
# all of WP core assets, PHP files, admin/login stuff, and AJAX.
RewriteCond %{REQUEST_URI} !^/wp/
RewriteCond %{DOCUMENT_ROOT}/wp/%{REQUEST_URI} -f [OR]
RewriteCond %{DOCUMENT_ROOT}/wp/%{REQUEST_URI} -d
RewriteRule ^(.*)$ /wp/$1 [L]

# If the requested path doesn't exist in this docroot (outside /wp/), then send
# the request over to WP's index (so... pretty paths, WP rewrites/aliases, etc.)
# otherwise use the path as requested (so: theme and plugin assets, uploads)
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule . wp/index.php [L]
</IfModule>

# Caching of assets and uploads
Header unset ETag
FileETag None

<FilesMatch ".(ico|jpg|jpeg|png|gif|svg|mp4)$">
  # 1 year
  Header set Cache-Control "max-age=31536000, public"
</FilesMatch>
<FilesMatch ".(js|css)$">
  # 2 months
  Header set Cache-Control "max-age=5184000, public"
</FilesMatch>

<IfModule mod_expires.c>
  ExpiresActive On

  ExpiresByType text/html "access 1 hour"

  # Images uploaded are valid "forever" because even re-uploads would get new
  # names or dates. This does assume I wouldn't update a theme asset without
  # changing its name though.
  ExpiresByType image/jpg "access 1 year"
  ExpiresByType image/jpeg "access 1 year"
  ExpiresByType image/gif "access 1 year"
  ExpiresByType image/png "access 1 year"
  ExpiresByType image/svg "access 1 year"
  ExpiresByType video/mp4 "access 1 year"

  # CSS and JS all have cache buster tags on 'em tied to the WP release (core
  # stuff) or git tag (my stuff)
  ExpiresByType text/css "access 2 months"
  ExpiresByType application/javascript "access 2 months"
  ExpiresByType application/x-javascript "access 2 months"

  # Favicon is good for life
  ExpiresByType image/x-icon "access 1 year"

  ExpiresDefault "access 2 days"
</IfModule>
